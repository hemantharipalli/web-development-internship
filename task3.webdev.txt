<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
        }
        .board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-template-rows: repeat(3, 100px);
            gap: 5px;
            justify-content: center;
            margin-top: 20px;
        }
        .cell {
            width: 100px;
            height: 100px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2em;
            background: linear-gradient(to bottom right, #007bff, #00d4ff);
            color: white;
            border: none;
            cursor: pointer;
        }
        .cell:disabled {
            cursor: not-allowed;
        }
        .status {
            margin-top: 20px;
            font-size: 1.5em;
        }
        .reset {
            margin-top: 10px;
            font-size: 1em;
            padding: 10px;
            cursor: pointer;
        }
    </style>
</head>
<body>
    <h1>Tic-Tac-Toe</h1>
    <div class="status" id="status">Player X's turn</div>
    <div class="board" id="board"></div>
    <button class="reset" onclick="resetGame()">Reset Game</button>
    
    <script>
        let board = ['', '', '', '', '', '', '', '', ''];
        let currentPlayer = 'X';
        let gameActive = true;

        function createBoard() {
            const boardElement = document.getElementById('board');
            boardElement.innerHTML = '';
            board.forEach((cell, index) => {
                const cellButton = document.createElement('button');
                cellButton.classList.add('cell');
                cellButton.textContent = cell;
                cellButton.onclick = () => handleMove(index);
                cellButton.disabled = cell !== '';
                boardElement.appendChild(cellButton);
            });
        }

        function handleMove(index) {
            if (!gameActive || board[index] !== '') return;
            board[index] = currentPlayer;
            checkWinner();
            currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
            document.getElementById('status').textContent = `Player ${currentPlayer}'s turn`;
            createBoard();
        }

        function checkWinner() {
            const winPatterns = [
                [0, 1, 2], [3, 4, 5], [6, 7, 8],
                [0, 3, 6], [1, 4, 7], [2, 5, 8],
                [0, 4, 8], [2, 4, 6]
            ];
            for (let pattern of winPatterns) {
                const [a, b, c] = pattern;
                if (board[a] && board[a] === board[b] && board[a] === board[c]) {
                    document.getElementById('status').textContent = `Player ${board[a]} wins!`;
                    gameActive = false;
                    return;
                }
            }
            if (!board.includes('')) {
                document.getElementById('status').textContent = "It's a draw!";
                gameActive = false;
            }
        }

        function resetGame() {
            board = ['', '', '', '', '', '', '', '', ''];
            currentPlayer = 'X';
            gameActive = true;
            document.getElementById('status').textContent = "Player X's turn";
            createBoard();
        }

        createBoard();
    </script>
</body>
</html>